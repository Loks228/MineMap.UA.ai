# Инструкции по использованию модели YOLO для обнаружения взрывоопасных предметов

## 1. Установка зависимостей

Убедитесь, что установлены все необходимые библиотеки:

```bash
pip install -r requirements.txt
```

## 2. Подготовка данных

Если у вас уже есть данные в формате классификации (папки 'dangerous' и 'safe'), вы можете конвертировать их в формат YOLO с помощью:

```bash
python data_prep.py --input путь/к/вашим/данным --output путь/для/yolo/данных --yolo
```

Это создаст:
- Структуру директорий для YOLO
- Файлы аннотаций в формате YOLO
- Файл data.yaml для конфигурации обучения

Примечание: Сгенерированная разметка будет упрощенной (объекты центрированы и занимают большую часть изображения). Для лучших результатов рекомендуется использовать более точную разметку объектов.

## 3. Обучение модели

### 3.1. Обучение с нуля

```bash
python train.py --data путь/к/data.yaml --output runs/mines_detection
```

### 3.2. Использование предобученной модели

```bash
python train.py --data путь/к/data.yaml --output runs/mines_detection --pretrained
```

### 3.3. Fine-tuning предобученной модели

```bash
python train.py --data путь/к/data.yaml --output runs/mines_detection --pretrained --fine_tune
```

### Дополнительные параметры обучения

- `--epochs` - количество эпох обучения (по умолчанию 50)
- `--batch_size` - размер батча (по умолчанию 16)
- `--img_size` - размер изображения для обучения (по умолчанию 640)

## 4. Использование модели для предсказаний

После обучения вы можете использовать модель для анализа новых изображений:

```bash
python predict.py --model путь/к/модели.pt --image путь/к/изображению.jpg
```

### Дополнительные параметры предсказания

- `--conf` - порог уверенности (0-1, по умолчанию 0.25)
- `--classes` - имена классов (по умолчанию "mine" "not_dangerous")

## 5. Примеры использования

### Подготовка данных

```bash
python data_prep.py --input data/classification --output data/yolo --yolo
```

### Обучение

```bash
python train.py --data data/yolo/data.yaml --output runs/explosive_detection --pretrained --fine_tune --epochs 100
```

### Предсказание

```bash
python predict.py --model runs/explosive_detection/train/weights/best.pt --image test_images/mine1.jpg --conf 0.3
```

## 6. Результаты

Модель YOLO не только классифицирует изображения, но и находит точное расположение объектов на них. Результаты включают:

- Визуализацию с обнаруженными объектами
- Координаты рамок (bounding boxes)
- Уверенность детекции
- Классификацию объектов

## 7. Преимущества YOLO перед предыдущей моделью

- Обнаружение конкретного положения объектов на изображении
- Возможность обнаружения нескольких объектов на одном изображении
- Более высокая скорость работы
- Лучшая точность
- Возможность работы в реальном времени 